---
import CardSm from "./CardSm.astro";
import { getCollection } from 'astro:content';
const apps = await getCollection("apps");
const browsers = await getCollection("browsers");
const tools = await getCollection("tools");

const collections = [apps, browsers, tools]

const mergedCollection = collections.flat();

const collectionAItems = mergedCollection.filter(item => item.data.windows);
---
<div class="flex flex-col px-5 p-10  md:px-5 lg:p-10 rounded-2xl m-5 bg-gradient-to-r from-cyan-500 to-sky-200  relative overflow-hidden  ">
    <img src="/icons/windows.png" alt="" class="w-72   absolute -z-0 top-0 right-0 animate-pulse">
    <div class="text-xl font-bold  flex items-center z-10">
        <svg class="w-10 h-10 text-gray-100 dark:text-white " aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
        <path fill="currentColor" fill-rule="evenodd" d="M3.005 12 3 6.408l6.8-.923v6.517H3.005ZM11 5.32 19.997 4v8H11V5.32ZM20.067 13l-.069 8-9.065-1.275L11 13h9.067ZM9.8 19.58l-6.795-.931V13H9.8v6.58Z" clip-rule="evenodd"/>
    </svg>
    <h2 class="text-gray-200">Our Top Picks for Windows</h2></div>
    <div class="grid gap-5 grid-cols-1 sm:grid-cols-1 md:grid-cols-4 lg:grid-cols-4  pt-10 z-10 ">
        <!-- <CardSm/> -->
        <!-- {collectionAItems.map((item) => (
            <CardSm title={item.data.title} rating={item.data.rating} url={`${item.data.collection}/${item.slug}`}/>
          ))} -->
          {collectionAItems
            .filter((item) => item.data.rating > 4.3)
            .sort(() => Math.random() - 1) // Randomize the order of items
            .map((item) => (
              <CardSm 
                title={item.data.title} 
                rating={item.data.rating} 
                category ={item.data.category}
                url={`${item.data.collection}/${item.slug}`} 
                thumbnail ={item.data.thumbnail}
              />
            ))}
          
          
    </div>
</div>
